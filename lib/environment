#!/usr/bin/env bash
#
# Environment file to start/create named docker containers.
# Source it only in "functions" file.

# No set-e because it's a sourced file

# Load Drucker config
source "../../drucker.config" > /dev/null

domain=${PROJECT_NAME}.local
unset SUBDOMAINS

# owner/group
export DOCKER_USER=`id -u`
export DOCKER_USER_GROUP=`id -g`

# service: php
service=php
export PHP_SERVICE="${service}"
# the container name:
export PHP_NAME="${PROJECT_NAME_PLAIN}_${service}"
# the image to build the container from:
if [ -z "${PHP_IMAGE_VERSION}" ]; then PHP_IMAGE_VERSION="${PHP_VERSION}-4.15.1"; fi
export PHP_IMAGE="ovh/drupal-php:${PHP_IMAGE_VERSION}"
export PHP_IMAGE_CONTEXT="./docker-images/drupal-php/${PHP_IMAGE_VERSION}"
SUBDOMAINS+="${service} "


# service: www
service=www
export WWW_SERVICE="${service}"
# the container name:
export WWW_NAME="${PROJECT_NAME_PLAIN}_${service}"
# the image to build the container from:
if [ -z "${WWW_IMAGE_VERSION}" ]; then WWW_IMAGE_VERSION="1.16-5.7.4"; fi
export WWW_IMAGE="ovh/drupal-nginx:${DRUPAL_VERSION}-${WWW_IMAGE_VERSION}"
export WWW_IMAGE_CONTEXT="./docker-images/drupal-nginx/${DRUPAL_VERSION}/${WWW_IMAGE_VERSION}"
SUBDOMAINS+="${service} "

# service: db
service=db
export DB_SERVICE="${service}"
# the container name:
export DB_NAME="${PROJECT_NAME_PLAIN}_${service}"
# the image to build the container from:
if [ -z "${DB_IMAGE_VERSION}" ]; then DB_IMAGE_VERSION="10.3-3.6.8"; fi
export DB_IMAGE="ovh/drupal-mariadb:${DB_IMAGE_VERSION}"
export DB_IMAGE_CONTEXT="./docker-images/drupal-mariadb/${DB_IMAGE_VERSION}"
# the db root password:
export DB_ROOT_PASSWORD="drootpal"
# credentials for the Drupal database:
export DB_DRUPAL_USER="drupal"
export DB_DRUPAL_DB="drupal"
export DB_DRUPAL_PASSWORD="drupal"
SUBDOMAINS+="${service} "

# service: mail
service=mail
export MAIL_SERVICE="${service}"
# the container name:
export MAIL_NAME="${PROJECT_NAME_PLAIN}_${service}"
# the image to build the container from
export MAIL_IMAGE="mailhog/mailhog"
export MAIL_BIND_PORT=8025
SUBDOMAINS+="${service} "

# service: pma
service=pma
export PMA_SERVICE="${service}"
# the container name:
export PMA_NAME="${PROJECT_NAME_PLAIN}_${service}"
# the image to build the container from
export PMA_IMAGE="phpmyadmin/phpmyadmin"
SUBDOMAINS+="${service} "

# network
export NET_SUBNET="${SUBNET}.0/24"
export NET_GATEWAY="${SUBNET}.1"
export PHP_IP="${SUBNET}.100"
export PHP_DOMAIN="php.${domain}"
export WWW_IP="${SUBNET}.101"
export WWW_DOMAIN="www.${domain}"
export DB_IP="${SUBNET}.102"
export DB_DOMAIN="db.${domain}"
export MAIL_IP="${SUBNET}.103"
export MAIL_DOMAIN="mail.${domain}"
export PMA_IP="${SUBNET}.104"
export PMA_DOMAIN="pma.${domain}"

service=sshfs
export SSHFS_SERVICE="${service}"
# the container name:
export SSHFS_NAME="${PROJECT_NAME_PLAIN}_${service}"
export SSHFS_IMAGE="ovh/docker-sshd"
export SSHFS_IMAGE_CONTEXT="./docker-images/docker-sshd"
export SSHFS_IP="${SUBNET}.106"
export SSHFS_DOMAIN="sshfs.${domain}"
export SSH_USERS="`whoami`:`id -u`:`id -g`"

export WHOAMI="`whoami`"
export HOME="$HOME"

# Echo the values set above to create an environment file for use by Docker:
unset PWD SHLVL
env

# -----------------------------------------------------------

# The services/subdomains list
export SUBDOMAINS="$SUBDOMAINS"

# some Docker variables
export DOCKER_ENV="${DRUCKER_DIR}/lib/.docker.env"
export COMPOSE_OPTIONS="--env-file=${DOCKER_ENV}"
export DOCKER_PROJECT_NAME="${PROJECT_NAME_PLAIN}"

# UserId of user www-data in containers
export WWW_USER=${DOCKER_USER}
export WWW_USER_GROUP=${DOCKER_USER_GROUP}
export WWW_WORKDIR="web"

# set some variables
export net="${PROJECT_NAME_PLAIN}_dev_net"

# Custom images
export NODE_IMAGE="drupal-node:${NODE_VERSION}"
export NODE_CONTEXT="${DRUCKER_DIR}/lib/docker-images/drupal-node/${NODE_VERSION}"

# Wether to show the greeting (1) or not (other value) when opening a terminal
# in PhpStorm
export GREETING=1

# Site install defaults
# ----------------------
# site information
export SITE_NAME="${PROJECT_NAME}"
export ADMIN_USER=admin
export ADMIN_PASSWORD=admin
